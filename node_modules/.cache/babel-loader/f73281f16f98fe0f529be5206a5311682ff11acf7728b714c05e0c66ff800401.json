{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darsh\\\\OneDrive\\\\Desktop\\\\Project Crypto Price Tracker App\\\\src\\\\components\\\\CryptoCard.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptoCard = ({\n  coin,\n  onClick\n}) => {\n  const formatPrice = price => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: price < 1 ? 6 : 2\n    }).format(price);\n  };\n  const formatMarketCap = marketCap => {\n    if (marketCap >= 1e12) {\n      return `$${(marketCap / 1e12).toFixed(2)}T`;\n    } else if (marketCap >= 1e9) {\n      return `$${(marketCap / 1e9).toFixed(2)}B`;\n    } else if (marketCap >= 1e6) {\n      return `$${(marketCap / 1e6).toFixed(2)}M`;\n    } else {\n      return `$${marketCap.toLocaleString()}`;\n    }\n  };\n  const formatPercentage = percentage => {\n    const sign = percentage >= 0 ? '+' : '';\n    return `${sign}${percentage.toFixed(2)}%`;\n  };\n  const isPositive = coin.price_change_percentage_24h >= 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crypto-card\",\n    onClick: () => onClick(coin),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crypto-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: coin.image,\n        alt: coin.name,\n        className: \"crypto-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crypto-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: coin.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crypto-symbol\",\n          children: coin.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crypto-price\",\n      children: formatPrice(coin.current_price)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `crypto-change ${isPositive ? 'positive' : 'negative'}`,\n      children: formatPercentage(coin.price_change_percentage_24h)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crypto-market-cap\",\n      children: [\"Market Cap: \", formatMarketCap(coin.market_cap)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = CryptoCard;\nexport default CryptoCard;\nvar _c;\n$RefreshReg$(_c, \"CryptoCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CryptoCard","coin","onClick","formatPrice","price","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatMarketCap","marketCap","toFixed","toLocaleString","formatPercentage","percentage","sign","isPositive","price_change_percentage_24h","className","children","src","image","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","symbol","current_price","market_cap","_c","$RefreshReg$"],"sources":["C:/Users/darsh/OneDrive/Desktop/Project Crypto Price Tracker App/src/components/CryptoCard.jsx"],"sourcesContent":["import React from 'react';\n\nconst CryptoCard = ({ coin, onClick }) => {\n  const formatPrice = (price) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: price < 1 ? 6 : 2,\n    }).format(price);\n  };\n\n  const formatMarketCap = (marketCap) => {\n    if (marketCap >= 1e12) {\n      return `$${(marketCap / 1e12).toFixed(2)}T`;\n    } else if (marketCap >= 1e9) {\n      return `$${(marketCap / 1e9).toFixed(2)}B`;\n    } else if (marketCap >= 1e6) {\n      return `$${(marketCap / 1e6).toFixed(2)}M`;\n    } else {\n      return `$${marketCap.toLocaleString()}`;\n    }\n  };\n\n  const formatPercentage = (percentage) => {\n    const sign = percentage >= 0 ? '+' : '';\n    return `${sign}${percentage.toFixed(2)}%`;\n  };\n\n  const isPositive = coin.price_change_percentage_24h >= 0;\n\n  return (\n    <div className=\"crypto-card\" onClick={() => onClick(coin)}>\n      <div className=\"crypto-header\">\n        <img\n          src={coin.image}\n          alt={coin.name}\n          className=\"crypto-image\"\n        />\n        <div className=\"crypto-info\">\n          <h3>{coin.name}</h3>\n          <div className=\"crypto-symbol\">{coin.symbol}</div>\n        </div>\n      </div>\n      \n      <div className=\"crypto-price\">\n        {formatPrice(coin.current_price)}\n      </div>\n      \n      <div className={`crypto-change ${isPositive ? 'positive' : 'negative'}`}>\n        {formatPercentage(coin.price_change_percentage_24h)}\n      </div>\n      \n      <div className=\"crypto-market-cap\">\n        Market Cap: {formatMarketCap(coin.market_cap)}\n      </div>\n    </div>\n  );\n};\n\nexport default CryptoCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}